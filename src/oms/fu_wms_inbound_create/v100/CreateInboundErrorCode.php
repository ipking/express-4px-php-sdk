<?php

namespace express_4px\oms\fu_wms_inbound_create\v100;

class CreateInboundErrorCode{
	const ERR_INBOUND_CONSIGNMENT_REF_NO_EMPTY = 'ERR_INBOUND_CONSIGNMENT_REF_NO_EMPTY';
	const ERR_INBOUND_CONSIGNMENT_REF_NO_LENGTH_ERROR = 'ERR_INBOUND_CONSIGNMENT_REF_NO_LENGTH_ERROR';
	const ERR_INBOUND_CONSIGNMENT_TO_WAREHOUSECODE_EMPTY = 'ERR_INBOUND_CONSIGNMENT_TO_WAREHOUSECODE_EMPTY';
	const ERR_INBOUND_CONSIGNMENT_TOTAL_VOLUME_EMPTY = 'ERR_INBOUND_CONSIGNMENT_TOTAL_VOLUME_EMPTY';
	const ERR_INBOUND_CONSIGNMENT_TOTAL_VOLUME_TO_LARGE = 'ERR_INBOUND_CONSIGNMENT_TOTAL_VOLUME_TO_LARGE';
	const ERR_INBOUND_CONSIGNMENT_TOTAL_WEIGHT_EMPTY = 'ERR_INBOUND_CONSIGNMENT_TOTAL_WEIGHT_EMPTY';
	const ERR_INBOUND_CONSIGNMENT_TOTAL_WEIGHT_TO_LARGE = 'ERR_INBOUND_CONSIGNMENT_TOTAL_WEIGHT_TO_LARGE';
	const UPLOAD_OUT_CONSIGNMENT_CHECK_TYPE_LOGISTIC_EMPTY = 'UPLOAD_OUT_CONSIGNMENT_CHECK_TYPE_LOGISTIC_EMPTY';
	const ERR_INBOUND_CONSIGNMENT_TRANSPORT_TYPE_EMPTY = 'ERR_INBOUND_CONSIGNMENT_TRANSPORT_TYPE_EMPTY';
	const ERR_INBOUND_CONSIGNMENT_IS_PICKUP_EMPTY = 'ERR_INBOUND_CONSIGNMENT_IS_PICKUP_EMPTY';
	const ERR_INBOUND_CONSIGNMENT_IS_PICKUP_ILLEGAL = 'ERR_INBOUND_CONSIGNMENT_IS_PICKUP_ILLEGAL';
	const ERR_INBOUND_CONSIGNMENT_FROM_WAREHOUSECODE_EMPTY = 'ERR_INBOUND_CONSIGNMENT_FROM_WAREHOUSECODE_EMPTY';
	const ERR_INBOUND_CONSIGNMENT_OUT_CUSTOMS_TYPE_EMPTY = 'ERR_INBOUND_CONSIGNMENT_OUT_CUSTOMS_TYPE_EMPTY';
	const ERR_INBOUND_CONSIGNMENT_OUT_CUSTOMS_TYPE_VALUE_ERROR = 'ERR_INBOUND_CONSIGNMENT_OUT_CUSTOMS_TYPE_VALUE_ERROR';
	const ERR_INBOUND_CONSIGNMENT_IN_CUSTOMS_TYPE_EMPTY = 'ERR_INBOUND_CONSIGNMENT_IN_CUSTOMS_TYPE_EMPTY';
	const ERR_INBOUND_CONSIGNMENT_IN_CUSTOMS_TYPE_VALUE_ERROR = 'ERR_INBOUND_CONSIGNMENT_IN_CUSTOMS_TYPE_VALUE_ERROR';
	const ERR_INBOUND_CONSIGNMENT_INSURED_TYPE_ERROR = 'ERR_INBOUND_CONSIGNMENT_INSURED_TYPE_ERROR';
	const ERR_INBOUND_CONSIGNMENT_INSURED_AMOUNT_EMPTY = 'ERR_INBOUND_CONSIGNMENT_INSURED_AMOUNT_EMPTY';
	const ERR_INBOUND_CONSIGNMENT_INSURED_AMOUNT_6P_INVALID = 'ERR_INBOUND_CONSIGNMENT_INSURED_AMOUNT_6P_INVALID';
	const ERR_INBOUND_CONSIGNMENT_INSURED_AMOUNT_5Y8Y_INVALID = 'ERR_INBOUND_CONSIGNMENT_INSURED_AMOUNT_5Y8Y_INVALID';
	const ERR_INBOUND_CONSIGNMENT_INSURED_CURRENCY_EMPTY = 'ERR_INBOUND_CONSIGNMENT_INSURED_CURRENCY_EMPTY';
	const ERR_INBOUND_CONSIGNMENT_INSURED_CURRENCY_USD = 'ERR_INBOUND_CONSIGNMENT_INSURED_CURRENCY_USD';
	const ERR_INBOUND_CONSIGNMENT_COUNTRY_EMPTY = 'ERR_INBOUND_CONSIGNMENT_COUNTRY_EMPTY';
	const ERR_INBOUND_CONSIGNMENT_STATE_EMPTY = 'ERR_INBOUND_CONSIGNMENT_STATE_EMPTY';
	const ERR_INBOUND_CONSIGNMENT_CITY_EMPTY = 'ERR_INBOUND_CONSIGNMENT_CITY_EMPTY';
	const ERR_INBOUND_CONSIGNMENT_STATE_CITY_BOTH_EMPTY = 'ERR_INBOUND_CONSIGNMENT_STATE_CITY_BOTH_EMPTY';
	const ERR_INBOUND_CONSIGNMENT_TRANSPORT_TYPE_ERROR = 'ERR_INBOUND_CONSIGNMENT_TRANSPORT_TYPE_ERROR';
	const ERR_INBOUND_CONSIGNMENT_DISTRICT_EMPTY = 'ERR_INBOUND_CONSIGNMENT_DISTRICT_EMPTY';
	const ERR_INBOUND_CONSIGNMENT_POST_CODE_EMPTY = 'ERR_INBOUND_CONSIGNMENT_POST_CODE_EMPTY';
	const ERR_INBOUND_CONSIGNMENT_PICKUP_TIME_EMPTY = 'ERR_INBOUND_CONSIGNMENT_PICKUP_TIME_EMPTY';
	const ERR_INBOUND_CONSIGNMENT_STREET_EMPTY = 'ERR_INBOUND_CONSIGNMENT_STREET_EMPTY';
	const ERR_INBOUND_CONSIGNMENT_CONTACK_NAME_EMPTY = 'ERR_INBOUND_CONSIGNMENT_CONTACK_NAME_EMPTY';
	const ERR_INBOUND_CONSIGNMENT_TELEPHONE_EMPTY = 'ERR_INBOUND_CONSIGNMENT_TELEPHONE_EMPTY';
	const ERR_INBOUND_CONSIGNMENT_PLAN_ARRIVE_TIME_EMPTY = 'ERR_INBOUND_CONSIGNMENT_PLAN_ARRIVE_TIME_EMPTY';
	const UPLOAD_OUT_CONSIGNMENT_CHECK_TYPE_COUNTRY_ILLEGAL = 'UPLOAD_OUT_CONSIGNMENT_CHECK_TYPE_COUNTRY_ILLEGAL';
	const ERR_INBOUND_CONSIGNMENT_FROM_WAREHOUSECODE_NOT_EXIST = 'ERR_INBOUND_CONSIGNMENT_FROM_WAREHOUSECODE_NOT_EXIST';
	const ERR_INBOUND_CONSIGNMENT_TO_WAREHOUSECODE_NOT_EXIST = 'ERR_INBOUND_CONSIGNMENT_TO_WAREHOUSECODE_NOT_EXIST';
	const ERR_ROUTE_DO_NOT_EXSIT = 'ERR_ROUTE_DO_NOT_EXSIT';
	const UPLOAD_OUT_CONSIGNMENT_CHECK_TYPE_LOGISTIC_NOT_EXISTS = 'UPLOAD_OUT_CONSIGNMENT_CHECK_TYPE_LOGISTIC_NOT_EXISTS';
	const ERR_INBOUND_CONSIGNMENT_REF_NO_REPEAT = 'ERR_INBOUND_CONSIGNMENT_REF_NO_REPEAT';
	const ERR_INBOUND_CONSIGNMENT_SKU_SKU_NOT_FOUND = 'ERR_INBOUND_CONSIGNMENT_SKU_SKU_NOT_FOUND';
	const ERR_INBOUND_CONSIGNMENT_SKU_CODE_EMPTY = 'ERR_INBOUND_CONSIGNMENT_SKU_CODE_EMPTY';
	const ERR_INBOUND_CONSIGNMENT_SKU_NOT_FOUND_APPROVE = 'ERR_INBOUND_CONSIGNMENT_SKU_NOT_FOUND_APPROVE';
	const ERR_INBOUND_CONSIGNMENT_SKU_SUBSTUTAS_NOT_APPROVE = 'ERR_INBOUND_CONSIGNMENT_SKU_SUBSTUTAS_NOT_APPROVE';
	const ERR_INBOUND_CONSIGNMENT_PLAN_QTY_FORMAT = 'ERR_INBOUND_CONSIGNMENT_PLAN_QTY_FORMAT';
	const ERR_INBOUND_CONSIGNMENT_BOX_NO_EMPTY = 'ERR_INBOUND_CONSIGNMENT_BOX_NO_EMPTY';
	const ERR_INBOUND_CONSIGNMENT_BOX_NO_FORMAT = 'ERR_INBOUND_CONSIGNMENT_BOX_NO_FORMAT';
	const ERR_INBOUND_CONSIGNMENT_SKU_NO_REPEAT = 'ERR_INBOUND_CONSIGNMENT_SKU_NO_REPEAT';
	const ERR_INBOUND_CONSIGNMENT_SKU_BATCH_EMPTY = 'ERR_INBOUND_CONSIGNMENT_SKU_BATCH_EMPTY';
	const ERR_INBOUND_CONSIGNMENT_SKU_BATCH_LESS_THAN_3 = 'ERR_INBOUND_CONSIGNMENT_SKU_BATCH_LESS_THAN_3';
	const ERR_DECLARE_PRODUCT_NOT_EXIST = 'ERR_DECLARE_PRODUCT_NOT_EXIST';
	const ERR_INBOUND_CONSIGNMENT_NOT_FOUND_CONSINGNMENTNO_NULL = 'ERR_INBOUND_CONSIGNMENT_NOT_FOUND_CONSINGNMENTNO_NULL';
	const ERR_INBOUND_CONSIGNMENT_STATUS_CANNOT_CHECK = 'ERR_INBOUND_CONSIGNMENT_STATUS_CANNOT_CHECK';
	const ERR_SKU_STATUS_INVALID = 'ERR_SKU_STATUS_INVALID';
	const ERR_SKU_DECLARE_STATUS = 'ERR_SKU_DECLARE_STATUS';
	const ERR_DECLARE_GOODS_COUNTRY_NOT_EXIST = 'ERR_DECLARE_GOODS_COUNTRY_NOT_EXIST';
	const ERR_DECLARE_GOODS_COUNTRY_STATUS_ERROR = 'ERR_DECLARE_GOODS_COUNTRY_STATUS_ERROR';
	const ERR_INBOUND_CONSIGNMENT_TRACKING_NO_LENGTH_ERROR = 'ERR_INBOUND_CONSIGNMENT_TRACKING_NO_LENGTH_ERROR';
	const ERR_INBOUND_CONSIGNMENT_LICENSE_PLATE_LENGTH_ERROR = 'ERR_INBOUND_CONSIGNMENT_LICENSE_PLATE_LENGTH_ERROR';
	const ERR_COUNTRY_LENGTH_BEYOND = 'ERR_COUNTRY_LENGTH_BEYOND';
	const ERR_STATE_LENGTH_BEYOND = 'ERR_STATE_LENGTH_BEYOND';
	const ERR_CITY_LENGTH_BEYOND = 'ERR_CITY_LENGTH_BEYOND';
	const ERR_DISTRICT_LENGTH_BEYOND = 'ERR_DISTRICT_LENGTH_BEYOND';
	const ERR_POST_CODE_LENGTH_BEYOND = 'ERR_POST_CODE_LENGTH_BEYOND';
	const ERR_STREET_LENGTH_BEYOND = 'ERR_STREET_LENGTH_BEYOND';
	const ERR_HOUSE_NUMBER_LENGTH_BEYOND = 'ERR_HOUSE_NUMBER_LENGTH_BEYOND';
	const ERR_COMPANY_LENGTH_BEYOND = 'ERR_COMPANY_LENGTH_BEYOND';
	const ERR_FIRST_NAME_LENGTH_BEYOND = 'ERR_FIRST_NAME_LENGTH_BEYOND';
	const ERR_TELEPHONE_LENGTH_BEYOND = 'ERR_TELEPHONE_LENGTH_BEYOND';
	const ERR_INBOUND_CONSIGNMENT_WEIGHT_UNIT_ERROR = 'ERR_INBOUND_CONSIGNMENT_WEIGHT_UNIT_ERROR';
	const ERR_DECLARE_GOODS_COUNTRY_CURRENCY_LENGTH_ERROR = 'ERR_DECLARE_GOODS_COUNTRY_CURRENCY_LENGTH_ERROR';
	const ERR_INBOUND_CONSIGNMENT_INSURED_AMOUNT_FORMAT_INVALID = 'ERR_INBOUND_CONSIGNMENT_INSURED_AMOUNT_FORMAT_INVALID';
	const ERR_REMARK_TO_LONG_50 = 'ERR_REMARK_TO_LONG_50';
	const ERR_SKU_CODE_LENGTH_ERROR = 'ERR_SKU_CODE_LENGTH_ERROR';
	const ERR_INBOUND_CONSIGNMENT_PLAN_QTY_TO_LARGE = 'ERR_INBOUND_CONSIGNMENT_PLAN_QTY_TO_LARGE';
	const ERR_INBOUND_CONSIGNMENT_PLAN_QTY_TO_SMALL = 'ERR_INBOUND_CONSIGNMENT_PLAN_QTY_TO_SMALL';
	const ERR_INBOUND_CONSIGNMENT_SKU_BATCHE_LENGTH_ILLEGAL = 'ERR_INBOUND_CONSIGNMENT_SKU_BATCHE_LENGTH_ILLEGAL';
	
	static $codeMessageMap = array(
		self::ERR_INBOUND_CONSIGNMENT_REF_NO_EMPTY                  => '入库委托[参考号]不能为空',
		self::ERR_INBOUND_CONSIGNMENT_REF_NO_LENGTH_ERROR           => '入库委托[参考号]长度不正确,正确范围1-50;',
		self::ERR_INBOUND_CONSIGNMENT_TO_WAREHOUSECODE_EMPTY        => '入库上架仓库不能为空',
		self::ERR_INBOUND_CONSIGNMENT_TOTAL_VOLUME_EMPTY            => '总体积不能为空',
		self::ERR_INBOUND_CONSIGNMENT_TOTAL_VOLUME_TO_LARGE         => '总体积数值不正确,正确范围(0.001M3-999999999999.999M3)',
		self::ERR_INBOUND_CONSIGNMENT_TOTAL_WEIGHT_EMPTY            => '总重量不能为空',
		self::ERR_INBOUND_CONSIGNMENT_TOTAL_WEIGHT_TO_LARGE         => '总重量数值不正确,正常范围(0.001KG-99999.999KG)',
		self::UPLOAD_OUT_CONSIGNMENT_CHECK_TYPE_LOGISTIC_EMPTY      => '入库委托[物流产品]不能为空',
		self::ERR_INBOUND_CONSIGNMENT_TRANSPORT_TYPE_EMPTY          => '入库委托[运输方式]不能为空',
		self::ERR_INBOUND_CONSIGNMENT_IS_PICKUP_EMPTY               => '上门提货不能为空',
		self::ERR_INBOUND_CONSIGNMENT_IS_PICKUP_ILLEGAL             => '上门提货字符非法;',
		self::ERR_INBOUND_CONSIGNMENT_FROM_WAREHOUSECODE_EMPTY      => '入库交货仓库不能为空',
		self::ERR_INBOUND_CONSIGNMENT_OUT_CUSTOMS_TYPE_EMPTY        => '入库委托[出口报关类型]不能为空',
		self::ERR_INBOUND_CONSIGNMENT_OUT_CUSTOMS_TYPE_VALUE_ERROR  => '入库委托[出口报关类型]值不正确',
		self::ERR_INBOUND_CONSIGNMENT_IN_CUSTOMS_TYPE_EMPTY         => '入库委托[进口报关类型]不能为空',
		self::ERR_INBOUND_CONSIGNMENT_IN_CUSTOMS_TYPE_VALUE_ERROR   => '入库委托[进口报关类型]值不正确',
		self::ERR_INBOUND_CONSIGNMENT_INSURED_TYPE_ERROR            => '入库委托[保险类型]错误',
		self::ERR_INBOUND_CONSIGNMENT_INSURED_AMOUNT_EMPTY          => '入库委托[投保金额]不能为空',
		self::ERR_INBOUND_CONSIGNMENT_INSURED_AMOUNT_6P_INVALID     => '投保金额必须在200.00~9999999.00之间',
		self::ERR_INBOUND_CONSIGNMENT_INSURED_AMOUNT_5Y8Y_INVALID   => '投保金额必须在1.00~200.00之间',
		self::ERR_INBOUND_CONSIGNMENT_INSURED_CURRENCY_EMPTY        => '入库委托[投保币别]不能为空',
		self::ERR_INBOUND_CONSIGNMENT_INSURED_CURRENCY_USD          => '入库委托[投保币别]只能为USD',
		self::ERR_INBOUND_CONSIGNMENT_COUNTRY_EMPTY                 => '入库委托[国家]不能为空',
		self::ERR_INBOUND_CONSIGNMENT_STATE_EMPTY                   => '入库委托[州/省]不能为空',
		self::ERR_INBOUND_CONSIGNMENT_CITY_EMPTY                    => '入库委托[城市]不能为空',
		self::ERR_INBOUND_CONSIGNMENT_STATE_CITY_BOTH_EMPTY         => '入库委托[州/省],[城市]不能同时为空',
		self::ERR_INBOUND_CONSIGNMENT_TRANSPORT_TYPE_ERROR          => '入库委托[运输方式]错误',
		self::ERR_INBOUND_CONSIGNMENT_DISTRICT_EMPTY                => '入库委托[区/县]不能为空',
		self::ERR_INBOUND_CONSIGNMENT_POST_CODE_EMPTY               => '入库委托[邮编]不能为空',
		self::ERR_INBOUND_CONSIGNMENT_PICKUP_TIME_EMPTY             => '入库委托[提货时间]不能为空',
		self::ERR_INBOUND_CONSIGNMENT_STREET_EMPTY                  => '入库委托[街道]不能为空',
		self::ERR_INBOUND_CONSIGNMENT_CONTACK_NAME_EMPTY            => '入库委托[姓名]不能为空',
		self::ERR_INBOUND_CONSIGNMENT_TELEPHONE_EMPTY               => '入库委托[电话]不能为空',
		self::ERR_INBOUND_CONSIGNMENT_FROM_WAREHOUSECODE_EMPTY      => '入库交货仓库不能为空',
		self::ERR_INBOUND_CONSIGNMENT_PLAN_ARRIVE_TIME_EMPTY        => '入库委托[计划到仓时间]不能为空',
		self::UPLOAD_OUT_CONSIGNMENT_CHECK_TYPE_COUNTRY_ILLEGAL     => '国家二字码非法',
		self::ERR_INBOUND_CONSIGNMENT_FROM_WAREHOUSECODE_NOT_EXIST  => '入库交货仓库不存在',
		self::ERR_INBOUND_CONSIGNMENT_TO_WAREHOUSECODE_NOT_EXIST    => '入库上架仓库不存在',
		self::ERR_ROUTE_DO_NOT_EXSIT                                => '路线不存在',
		self::UPLOAD_OUT_CONSIGNMENT_CHECK_TYPE_LOGISTIC_NOT_EXISTS => '物流产品不存在',
		self::ERR_INBOUND_CONSIGNMENT_REF_NO_REPEAT                 => '入库委托参考号重复',
		self::ERR_INBOUND_CONSIGNMENT_SKU_SKU_NOT_FOUND             => '入库委托单明细SKU不存在',
		self::ERR_INBOUND_CONSIGNMENT_SKU_CODE_EMPTY                => '入库委托SkuCode不能为空',
		self::ERR_INBOUND_CONSIGNMENT_SKU_NOT_FOUND_APPROVE         => '入库委托[SKU]不存在或未发布',
		self::ERR_INBOUND_CONSIGNMENT_SKU_SUBSTUTAS_NOT_APPROVE     => '入库委托[SKU]图片子状态异常',
		self::ERR_INBOUND_CONSIGNMENT_PLAN_QTY_FORMAT               => '入库委托SKU数量必须大于0',
		self::ERR_INBOUND_CONSIGNMENT_BOX_NO_EMPTY                  => '入库委托 箱号不能为空',
		self::ERR_INBOUND_CONSIGNMENT_BOX_NO_FORMAT                 => '入库委托 箱号必须介于1和9999999之间的值',
		self::ERR_INBOUND_CONSIGNMENT_SKU_NO_REPEAT                 => '入库委托 sku+箱号 不能重复',
		self::ERR_INBOUND_CONSIGNMENT_SKU_BATCH_EMPTY               => '入库委托SKU批次号不能为空',
		self::ERR_INBOUND_CONSIGNMENT_SKU_BATCH_LESS_THAN_3         => 'SKU批次号长度不能小于3',
		self::ERR_DECLARE_PRODUCT_NOT_EXIST                         => '申报产品不存在',
		self::ERR_INBOUND_CONSIGNMENT_NOT_FOUND_CONSINGNMENTNO_NULL => '入库委托单不存在',
		self::ERR_INBOUND_CONSIGNMENT_STATUS_CANNOT_CHECK           => '入库委托单当前状态不能进行审核操作;',
		self::ERR_SKU_STATUS_INVALID                                => 'SKU状态已作废',
		self::ERR_SKU_DECLARE_STATUS                                => '申报产品SKU状态异常',
		self::ERR_DECLARE_GOODS_COUNTRY_NOT_EXIST                   => '清关国家信息不存在',
		self::ERR_DECLARE_GOODS_COUNTRY_STATUS_ERROR                => '清关国家状态异常',
		self::ERR_INBOUND_CONSIGNMENT_TRACKING_NO_LENGTH_ERROR      => '入库委托[运输单号]长度不正确,正确范围1-64;',
		self::ERR_INBOUND_CONSIGNMENT_LICENSE_PLATE_LENGTH_ERROR    => '卡车车牌号',
		self::ERR_COUNTRY_LENGTH_BEYOND                             => '国家二字码长度超出',
		self::ERR_STATE_LENGTH_BEYOND                               => '州/省信息长度超出',
		self::ERR_CITY_LENGTH_BEYOND                                => '城市信息长度超出',
		self::ERR_DISTRICT_LENGTH_BEYOND                            => '区/县信息长度超出',
		self::ERR_POST_CODE_LENGTH_BEYOND                           => '邮编信息长度超出',
		self::ERR_STREET_LENGTH_BEYOND                              => '街道信息长度超出',
		self::ERR_HOUSE_NUMBER_LENGTH_BEYOND                        => '门牌号长度超出',
		self::ERR_COMPANY_LENGTH_BEYOND                             => '公司信息长度超出',
		self::ERR_FIRST_NAME_LENGTH_BEYOND                          => '收件人名长度超出',
		self::ERR_TELEPHONE_LENGTH_BEYOND                           => '电话号码/手机号长度超出',
		self::ERR_INBOUND_CONSIGNMENT_WEIGHT_UNIT_ERROR             => '重量单位数据异常',
		self::ERR_DECLARE_GOODS_COUNTRY_CURRENCY_LENGTH_ERROR       => '报关国家币种长度异常;',
		self::ERR_INBOUND_CONSIGNMENT_INSURED_AMOUNT_FORMAT_INVALID => '投保金额格式不正确;',
		self::ERR_REMARK_TO_LONG_50                                 => '备注长度大于50',
		self::ERR_SKU_CODE_LENGTH_ERROR                             => 'SKU长度错误',
		self::ERR_INBOUND_CONSIGNMENT_PLAN_QTY_TO_LARGE             => '入库委托SKU数量太大,不能大于99999',
		self::ERR_INBOUND_CONSIGNMENT_PLAN_QTY_TO_SMALL             => '入库委托SKU数量太小,不能小于1',
		self::ERR_INBOUND_CONSIGNMENT_SKU_BATCHE_LENGTH_ILLEGAL     => 'SKU批次号长度错误',
	);
	
}